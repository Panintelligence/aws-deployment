AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::SecretsManager-2020-07-23
Resources:
  RDSDBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Parameters:
        sql_mode: NO_AUTO_VALUE_ON_ZERO
        lower_case_table_names: 1
        log_bin_trust_function_creators: 1
      Description: Parameter group for panintelligence rds
      Family: mariadb10.5
  MyRDSInstance:
    DeletionPolicy: Snapshot
    Type: 'AWS::RDS::DBInstance'
    Properties:
      VPCSecurityGroups:
        - !ImportValue RDSSecurityGroup
      Engine: mariadb
      DBParameterGroupName: !Ref RDSDBParameterGroup
      PubliclyAccessible: true
      MultiAZ: true
      MasterUsername: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref MyRDSSecret
          - ':SecretString:username}}'
      MasterUserPassword: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref MyRDSSecret
          - ':SecretString:password}}'
      Port: 3306
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      DBSubnetGroupName: !Ref RDSSubnetGroup
      DBInstanceIdentifier: !Ref DBName

  RDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupName: Panintelligence
      DBSubnetGroupDescription: panintelligence subnet group
      SubnetIds:
        - !ImportValue RDSSubnetA
        - !ImportValue RDSSubnetB
      Tags:
        - Value: !Sub '${AWS::StackName}-Subnet-group'
          Key: Name

  MySecretRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    DependsOn: SecretRDSInstanceAttachment
    Properties:
      SecretId:
        Ref: MyRDSSecret
      HostedRotationLambda:
        RotationType: MySQLSingleUser
        RotationLambdaName: SecretsManagerRotation
        VpcSecurityGroupIds: !ImportValue RDSSecurityGroup
        VpcSubnetIds:
          Fn::Join:
            - ","
            - - !ImportValue RDSSubnetA
              - !ImportValue RDSSubnetB
      RotationRules:
        AutomaticallyAfterDays: 30

  MyRDSSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        RequireEachIncludedType: true
        PasswordLength: 25
        SecretStringTemplate: '{"username": "MyDBAdmin"}'
      Name: ProdDBSecret
      Description: Secret with dynamically generated password.
  SecretRDSInstanceAttachment:
    Type: 'AWS::SecretsManager::SecretTargetAttachment'
    Properties:
      TargetType: 'AWS::RDS::DBInstance'
      SecretId: !Ref MyRDSSecret
      TargetId: !Ref MyRDSInstance
Parameters:
  DBUserName:
    Type: String
    Description: The database master admin username
  DBName:
    Default: dashboard
    Type: String
    Description: The database schema name
Outputs:
  DBName:
    Value: !Ref MyRDSSecret
    Description: The database schema name
    Export:
      Name: MyRDSSecret

  MyDBEndpoint:
    Description: Panintelligence MyDB Endpoint
    Value: !GetAtt MyRDSInstance.Endpoint.Address
    Export:
      Name: MyDBEndPoint